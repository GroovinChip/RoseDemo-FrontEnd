{"version":3,"sources":["Mirador.js","WebAnnotationsIconButton.js","WebAnnotationsPlugin.js","index.js"],"names":["Mirador","this","props","config","plugins","mirador","viewer","id","Component","WebAnnotationsIconButton","state","handleClick","bind","alert","class","icon","onClick","React","name","target","mode","component","console","log","ReactDOM","render","windows","manifestId","canvasId","themes","dark","palette","type","primary","main","secondary","light","plugin","document","getElementById"],"mappings":"6RAceA,E,4LAVQ,IAAD,EACUC,KAAKC,MAAzBC,EADU,EACVA,OAAQC,EADE,EACFA,QAChBC,IAAQC,OAAOH,EAAQC,K,+BAEf,IACAD,EAAWF,KAAKC,MAAhBC,OACR,OAAO,yBAAKI,GAAIJ,EAAOI,S,GAPLC,a,wBC0BPC,G,kBAvBX,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,GAGb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALJ,E,2EAUfC,MAAM,iG,+BAIN,OACI,yBAAKN,GAAG,mBAAmBO,MAAM,WAC7B,kBAAC,IAAD,CAAcC,KAAK,QAAQC,QAASf,KAAKU,cACzC,0BAAMG,MAAM,eAAZ,wB,GAlBuBG,IAAMT,YCM9B,GACbU,KAAM,uBACNC,OAAQ,+BACRC,KAAM,MACNC,UAZ2B,SAAAnB,GAE3B,OADAoB,QAAQC,IAAIrB,GACL,yBAAKK,GAAG,wBAEb,kBAAC,EAAD,SCFJiB,IAASC,OACP,kBAAC,EAAD,CAAStB,OAAQ,CACfI,GAAI,UACJmB,QAAS,CAAC,CACNC,WAAY,6EACZC,SAAU,gFAEdC,OAAO,CACJC,KAAM,CACHC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,aAIbE,MAAO,CACNL,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,eAMX9B,QAAS,CAACiC,KACfC,SAASC,eAAe,W","file":"static/js/main.bd603704.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport mirador from \"mirador\";\n\nclass Mirador extends Component {\n  componentDidMount() {\n    const { config, plugins } = this.props;\n    mirador.viewer(config, plugins);\n  }\n  render() {\n    const { config } = this.props;\n    return <div id={config.id} />;\n  }\n}\n\nexport default Mirador;\n","import React from \"react\";\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport './WebAnnotationsIconButtonStyles.css';\r\n\r\n//TODO: add network call to WA endpoint\r\nclass WebAnnotationsIconButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        // This binding is necessary to make `this` work in the callback\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    // Handle button click\r\n    handleClick() {\r\n        alert('This button will display Web Annotations soon! It will also be moved to the window sidebar.');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"WebAnnoContainer\" class=\"tooltip\">\r\n                <MaterialIcon icon='class' onClick={this.handleClick} />\r\n                <span class=\"tooltiptext\">Web Annotations</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WebAnnotationsIconButton;","import React from \"react\";\nimport WebAnnotationsIconButton from \"./WebAnnotationsIconButton\";\n\nconst WebAnnotationsPlugin = props => {\n  console.log(props);\n  return <div id=\"WebAnnotationsPlugin\">\n    {/* <props.TargetComponent {...props} /> */}\n    <WebAnnotationsIconButton />\n  </div>;\n};\n\nexport default {\n  name: \"WebAnnotationsPlugin\",\n  target: \"WorkspaceControlPanelButtons\",\n  mode: \"add\",\n  component: WebAnnotationsPlugin\n};","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Mirador from \"./Mirador\";\nimport plugin from \"./WebAnnotationsPlugin\";\n\nReactDOM.render(\n  <Mirador config={{ \n    id: \"mirador\", \n    windows: [{ \n        manifestId: 'https://rosetest.library.jhu.edu/rosademo/iiif/rose/SeldenSupra57/manifest', \n        canvasId: 'https://rosetest.library.jhu.edu/rosademo/iiif/rose/SeldenSupra57/1r/canvas' \n      }] ,\n    themes:{\n       dark: {\n          palette: {\n            type: 'dark',\n            primary: {\n              main: '#3F51B5',\n            },\n            secondary: {\n              main: '#536dfe',\n            }\n          }\n       },\n       light: {\n        palette: {\n          type: 'light',\n          primary: {\n            main: '#3F51B5',\n          },\n          secondary: {\n            main: '#536dfe',\n          }\n        }\n     }  \n    },\n    // selectedTheme: 'dark',\n    }} plugins={[plugin]} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}